syntax = "proto3";

package raft;

// Message to request a vote
message RequestVoteRequest {
    int32 term = 1;
    int32 candidate_id = 2;
    int32 last_log_index = 3;
    int32 last_log_term = 4;
}

// Response for a vote request
message RequestVoteResponse {
    bool vote_granted = 1;
    int32 term = 2;
}

// Message to append entries
message AppendEntriesRequest {
    int32 term = 1;
    int32 leader_id = 2;
    int32 prev_log_index = 3;
    int32 prev_log_term = 4;
    repeated Entry entries = 5;
    int32 leader_commit = 6;
}

// Response for appending entries
message AppendEntriesResponse {
    bool success = 1;
    int32 term = 2;
}

// Log entry structure
message Entry {
    int32 term = 1;
    string data = 2;
}

// Service definition for Raft
service RaftService {
    rpc RequestVote (RequestVoteRequest) returns (RequestVoteResponse);
    rpc AppendEntries (AppendEntriesRequest) returns (AppendEntriesResponse);
}
